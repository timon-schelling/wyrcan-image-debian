name: build

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]


env:
  RUST_BACKTRACE: 1

jobs:

  build:
    name: ${{ matrix.platform.os_name }} with rust ${{ matrix.toolchain }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        platform:
          - os_name: linux-amd64
            target: x86_64-unknown-linux-musl
            bin: rtrs
            name: rtrs-linux-amd64.tar.gz
          - os_name: linux-arm
            target: arm-unknown-linux-musleabi
            bin: rtrs
            name: rtrs-linux-arm.tar.gz
        toolchain:
          - nightly
    steps:
      - uses: actions/checkout@v3
      - name: Cache cargo & target directories
        uses: Swatinem/rust-cache@v2
      - name: Install build-essential
        run: |
          sudo apt install musl-tools
      - name: Build binary
        uses: houseabsolute/actions-rust-cross@v0
        with:
          target: ${{ matrix.platform.target }}
          toolchain: ${{ matrix.toolchain }}
          command: "build"
          args: "-p rtrs --locked --release"
      - name: Package as archive
        shell: bash
        run: |
          cd target/${{ matrix.platform.target }}/release
          tar czvf ../../../${{ matrix.platform.name }} ${{ matrix.platform.bin }}
          cd -
      - name: Publish release artifacts
        uses: actions/upload-artifact@v3
        with:
          name: rtrs-${{ matrix.platform.os_name }}
          path: "rtrs-*"

  image:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2
    - name: Install Docker
      uses: docker/setup-buildx-action@v2

    - uses: actions/download-artifact@v3
      with:
        name: rtrs-linux-arm
        path: context
    - uses: actions/download-artifact@v3
      with:
        name: rtrs-linux-amd64
        path: context

    - name: 'Login to GitHub Container Registry'
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Build image
      uses: docker/build-push-action@v4
      with:
        context: context
        file: Dockerfile.use_prebuilt
        platforms: linux/amd64,linux/arm/v7
        push: true
        tags: ghcr.io/${{ github.repository }}:latest
