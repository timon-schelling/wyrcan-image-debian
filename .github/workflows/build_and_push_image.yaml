name: Build and publish image

on:
  push:
    branches: ['main']

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: timon-schelling/rtrs

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    strategy:
      fail-fast: false
      matrix:
        platform:
          - name: linux-amd64
            rust: x86_64-unknown-linux-gnu
            docker: linux/amd64
          - name: linux-armv7
            rust: armv7-unknown-linux-gnueabihf
            docker: linux/arm/v7
          - name: linux-arm64
            rust: aarch64-unknown-linux-gnu
            docker: linux/arm64

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          target: ${{ matrix.platform.rust }}
          profile: minimal
          default: true

      - name: Build
        run: cargo build --release

      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            main-${{ matrix.platform.name }}
          # ${{ env.GITHUB_SHA }}-${{ matrix.platform.name }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          platforms: ${{ matrix.platform.docker }}
          context: .
          file: ./Dockerfile.use_prebuild
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  build-multi-architecture:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    needs: build

    steps:
      - uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - uses: docker/metadata-action@v4
        id: metadata
        with:
          images: ${{ env.REGISTRY }}/${{ github.repository }}
          tags: |
            main
          # ${{ env.GITHUB_SHA }}

      - uses: int128/docker-manifest-create-action@v1
        with:
          tags: ${{ steps.metadata.outputs.tags }}
          suffixes: |
            -linux-amd64
            -linux-armv7
            -linux-arm64
